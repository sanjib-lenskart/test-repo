<div class="findyourfit_pp">
  Check Frame Fit
</div>
{% if product.tags contains 'Medium' or product.tags contains 'size_Medium'%}
<span class="size_frame">Medium</span>
{% endif %}

{% if product.tags contains 'Small' or product.tags contains 'size_Small' %}
<span class="size_frame">Small</span>
{% endif %}

{% if product.tags contains 'Large' or product.tags contains 'size_Large' %}
<span class="size_frame">Large</span>
{% endif %}

<div class="container-fit">
  <form enctype="multipart/form-data">
    <div class="app">
      <video id="camera-stream" playsinline></video>
      <img id="snap">

      <p id="error-message"></p>

      <div class="controls">
        <p class="instruction">For accurate result, make sure your face is well-lit & within the mask</p>
        <a href="#" id="take-photo" title="Take Photo">Take Photo</a>
      </div>

      <div class="instructionimages">
        <div class="skip">SKIP</div>
         <div class="backbtn">BACK</div>
        <h3>How it works</h3>
        <div id="instructionimages-slider" class="owl-carousel">
          <div class="instructionimages_img_cont">
            <img class="image1" src="https://cdn.shopify.com/s/files/1/0135/4144/1595/files/Screen-1.png?84958" />
            <h4>Take your glasses off</h4>
            <p>This will help us track your eyes and calculate your frame size</p>
          </div>

          <div class="instructionimages_img_cont">
            <img class="image2" src="https://cdn.shopify.com/s/files/1/0135/4144/1595/files/Screen-2.png?84958" />
            <h4>Align your face to the guide</h4>
            <p>This ensures that the distance between your face and phone is appropriate</p>
          </div>

          <div class="instructionimages_img_cont">
            <img class="image3" src="https://cdn.shopify.com/s/files/1/0135/4144/1595/files/Screen-3.png?84958" />
            <h4>Keep the camera at eye level</h4>
            <p>For accurate result, we need to make sure that youe face and the phone are aligned vertically</p>
          </div>

          <div class="instructionimages_img_cont">
            <img class="image4" src="https://cdn.shopify.com/s/files/1/0135/4144/1595/files/Screen-4.png?84958" />
            <h4>Browse frames that fit you perfectly</h4>
            <p>Select from a list of 1000+ frames tailor made for you</p>
          </div>
        </div>
        <div id="start-camera" class="lets visible">LET'S GET STARTED</div>
      </div>

      <div class="sizeresponce">
        <span class="closesize">&times;</span>
        <div class="contop">
         <h3 class="size_match">It's a MATCH. This Frame will fit you Perfectly</h3>
          <h3 class="size_notmatch">Sorry, this Frame Won't Fit you. Click below to See the Frames which will Fit you</h3>
<!--           <p>Your Frame size is</p>
          <p class="sizeint"><span></span> mm</p> -->
        </div>

        <div class="conbott">
          <img src="{{ 'small.png' | asset_img_url: '100x100x' }}" />
          <p>Your Eyeglass size</p>
          <a href="" class="sizevar"></a>          
        </div>
      </div>

      <div class="sizeresponce_err">
        <span class="closesize_err">&times;</span>
        <h3 class="title_err"></h3>
        <p class="message_err"></p>
        <div id="start-camera_ta" class="btn full_width findyourfit_tryagn">TRY AGAIN</div>
      </div>

      <div class="loaderbox">
        <p><img src="https://cdn.shopify.com/s/files/1/0135/4144/1595/files/small_loader.gif?84083" alt=""/> <span>Calculating Frame Size</span></p>
      </div>

      <!-- Hidden canvas element. Used for taking snapshot of video. -->
      <canvas id="canvas"></canvas>

      <!--       <div class="faceoverlay"></div> -->
      <img class="faceoverlay" src="https://cdn.shopify.com/s/files/1/0135/4144/1595/files/boundary_overlay_400x.png?86258" alt=""/>
    </div>
  </form>
  <div class="bgoverlayfit"></div>
</div>

<script>

  // References to all the element we will need.
  var videos = document.querySelector('#camera-stream'),
      image = document.querySelector('#snap'),
      start_camera = document.querySelector('#start-camera'),
      start_camera_ta = document.querySelector('#start-camera_ta'),
      controls = document.querySelector('.controls'),
      take_photo_btn = document.querySelector('#take-photo'),
      //delete_photo_btn = document.querySelector('#delete-photo'),
      //download_photo_btn = document.querySelector('#download-photo'),
      error_message = document.querySelector('#error-message');
  closesize = document.querySelector('.closesize');
  closesize_err = document.querySelector('.closesize_err');
  skip = document.querySelector('.skip');
  back = document.querySelector('.backbtn');

  // Mobile browsers cannot play video without user input,
  // so here we're using a button to start it manually.
  start_camera.addEventListener("click", function(e){
    //e.preventDefault();
    oncamera();
    // Start video playback manually.
    $('.faceoverlay').show();
    videos.play();
    showVideo();    
    $('.instructionimages').hide();
    
  });

  
  start_camera_ta.addEventListener("click", function(e){
    //e.preventDefault();
    oncamera();
    // Start video playback manually.
    
    videos.play();
    showVideo();   
    
    $('.instructionimages').hide();
    $('.sizeresponce_err').hide();
    $('.bgoverlayfit').hide();   
    $('.faceoverlay').show();
  });

  skip.addEventListener("click", function(e){
    //e.preventDefault();
    oncamera();
    // Start video playback manually.
    $('.faceoverlay').show();
    videos.play();
    showVideo();
    $('.instructionimages').hide();
  });

  back.addEventListener("click", function(e){
    $(".container-fit").hide();
  });

  take_photo_btn.addEventListener("click", function(e){
    $('.faceoverlay').hide();
    $('.bgoverlayfit').show();
    $('.loaderbox').show();

    e.preventDefault();
    var snap = takeSnapshot();

    // Show image. 
    image.setAttribute('src', snap);
    //image.classList.add("visible");

    var canvas = document.getElementById('canvas');
    var dataURL = canvas.toDataURL("image/jpeg");
    videos.pause();

    var mysenturls = 'https://lenskart-prod.firebaseapp.com/api/v1/frame-size/calculate'; //Test'         
	var proxysa = 'https://cors-anywhere.herokuapp.com/';
    
    var form = new FormData();
    form.append("image_file", dataURItoBlob(dataURL));

    $.ajax({
      "async": true,
      "crossDomain": true,
      type: "POST",
      "headers": {
        "cache-control": "no-cache",
        "Postman-Token": "30c3783f-7b8f-4d11-a294-fd5644b27057"
      },
      "processData": false,
      "contentType": false,
      "mimeType": "multipart/form-data",
      url: proxysa+mysenturls,
      crossDomain: true,
      "data": form,
      success: function (data) {
        successoperation(data);
      },
      error: function (data){         
        erroroperation(data); 
        console.log("error:"+data);
      }
    });     
  });

  function erroroperation(response){  
    // obj = JSON.parse(response);
    var abc = JSON.parse(JSON.stringify(response));
    var obj = JSON.parse(abc.responseText);
    
    function printValues(obj) {
      for(var k in obj) {
        if(obj[k] instanceof Object) {
          printValues(obj[k]);
        } else {
          //document.write([k] +": " + obj[k] +"<br>");              
          if([k] == 'title'){            
            console.log(obj[k]);
            $('.sizeresponce_err .title_err').text(obj[k]);              
          }

          if([k] == 'message'){            
            console.log(obj[k]);
            $('.sizeresponce_err .message_err').text(obj[k]);              
          }
          $('.loaderbox').hide();
          $('.sizeresponce_err').show();
        };
      }
    };
    // Printing all the values from the resulting object
    printValues(obj);
  }

  function successoperation(response){

    myObj = JSON.parse(response);
    console.log(myObj);

    var size_frame = $('.size_frame').text().trim();
    
    for (x in myObj) {
      console.log(myObj[x].frameWidth);
      console.log(myObj[x]);

      $('.sizeresponce .sizeint span').text(myObj[x].frameWidth);

      //find medium small large category
      var inputval = myObj[x].frameWidth;
      if(inputval == null || inputval == '') {     
      }
      else if(inputval < 48){
        $('.sizeresponce .sizevar').text('Small');                
        $('.sizeresponce .sizevar').attr('href','/collections/{{ collection.handle }}/size_small');        
      }

      else if(inputval >= 48 && inputval <= 55){
        $('.sizeresponce .sizevar').text('Medium');
        $('.sizeresponce .sizevar').attr('href','/collections/{{ collection.handle }}/size_medium');

      }

      else if(inputval > 55){
        $('.sizeresponce .sizevar').text('Large');
        $('.sizeresponce .sizevar').attr('href','/collections/{{ collection.handle }}/size_large');

      }

      else if(isNaN(inputval)){
        //$(".error1").show();
      }
    }//end for loop
    
      var sizevar = $('.sizevar').text().trim();        
        if(sizevar == size_frame){
          $('.size_match').show();
          $('.size_notmatch').hide();
          $('.sizevar').css('pointer-events','none');
        }
    else{
       $('.size_match').hide();
          $('.size_notmatch').show();
        }
    

    $('.loaderbox').hide();
    $('.sizeresponce').show();

  }

  function dataURItoBlob(dataURI) {
    var byteString = atob(dataURI.split(',')[1]);
    var ab = new ArrayBuffer(byteString.length);
    var ia = new Uint8Array(ab);
    for (var i = 0; i < byteString.length; i++) {
      ia[i] = byteString.charCodeAt(i);
    }
    return new Blob([ab], {type: 'image/jpeg'});
  }


  closesize.addEventListener("click", function(e){
    hideelements();
  });

  closesize_err.addEventListener("click", function(e){
    hideelements();
  });

  function oncamera(){   
    if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
    // Not adding `{ audio: true }` since we only want video now
    navigator.mediaDevices.getUserMedia({ video: true }).then(function(stream) {

       // Create an object URL for the video stream and
          // set it as src of our HTLM video element.
          videos.srcObject = stream;

          // Play the video element to start the stream.
          videos.play();
          videos.onplay = function() {
            showVideo();
          };
    });
}
    
  }

  function showVideo(){
    // Display the video stream and the controls.
    hideUI();
    videos.classList.add("visible");
    controls.classList.add("visible");
  }

  function takeSnapshot(){
    // Here we're using a trick that involves a hidden canvas element.
    var hidden_canvas = document.querySelector('canvas'),
        context = hidden_canvas.getContext('2d');

    var width = videos.videoWidth,
        height = videos.videoHeight;

    if (width && height) {

      // Setup a canvas with the same dimensions as the video.
      hidden_canvas.width = width;
      hidden_canvas.height = height;

      // Make a copy of the current frame in the video on the canvas.
      context.drawImage(videos, 0, 0, width, height);

      // Turn the canvas image into a dataURL that can be used as a src for our photo.
      return hidden_canvas.toDataURL('image/png');
    }
  }

  function displayErrorMessage(error_msg, error){
    error = error || "";
    if(error){
      console.log(error);
    }

    error_message.innerText = error_msg;
    hideUI();
    error_message.classList.add("visible");
  }

  function hideUI(){
    // Helper function for clearing the app UI.
    controls.classList.remove("visible");
    start_camera.classList.remove("visible");
    videos.classList.remove("visible");
    snap.classList.remove("visible");
    error_message.classList.remove("visible");
  }

  function hideelements(){
    // Helper function for clearing the app UI.
    controls.classList.remove("visible");   
    videos.classList.remove("visible");
    snap.classList.remove("visible");
    error_message.classList.remove("visible");
  }
</script>

<style>
  .container-fit form{height: 100%;}
  .app{
    width: 100%;
    position: relative;
    height: 100%;
  }

  #shopify-section-fit{
    border: 2px solid #ccc;
    min-height: 220px;
  }
  
  @media(min-width:991px){
    #shopify-section-fit{
      display:none;
    }
  }
  
  .app .instruction{
   font-size: 15px;
    color: #fff;
    max-width: 280px;
    margin: 6px auto 30px; 
  }
  
  .app #start-camera{
    display: none;
    border-radius: 3px;
    max-width: 100%;
    color: #fff;
    background-color: #448AFF;
    text-decoration: none;
    padding: 15px;
    margin: 15px auto 0;
    text-align: center;
    position: fixed;
    bottom: 0;
    width: 100%;
  }

  .app video#camera-stream{    
/*     -webkit-transform: translate(-50%, -50%);
    -moz-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -o-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    left:50%;
    top:50%;    */
    
    -moz-transform: rotateY(180deg);
    -ms-transform: rotateY(180deg);
    -o-transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
    
    display: none;
    position: fixed;   
    min-width: 100%;
    min-height: 100%;
  }

  .app img#snap{
    position: absolute;
    top: 0%;
    left: 0;
    width: 100%;
    z-index: 10;
    display: none;
  }

  .app #error-message{
    width: 100%;
    background-color: #ccc;
    color: #9b9b9b;
    font-size: 28px;
    padding: 200px 100px;
    text-align: center;
    display: none;
  }

  .app .controls{
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 9999;
    padding: 0;
    display: none;
    text-align:center;
  }

  .app .controls a{   
    color: #fff;
    background-color: #49aa9a;
    text-decoration: none;
    padding: 15px;
    outline: none;
    width:100%;
    display:block;
    font-size: 16px;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 600;
  }
  
    .findyourfit_tryagn{
    text-decoration: none;
    padding: 15px;
    outline: none;
    width:100%;
    display:block;
    font-size: 16px;
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 600;
  }

  .app .controls a:hover{
    opacity: 1;
  }

  .app .controls a.disabled{
    background-color: #555;
    opacity: 0.5;
    cursor: default;
    pointer-events: none;
  }

  .app .controls a.disabled:hover{
    opacity: 0.5;
  }

  .app .controls a i{
    font-size: 18px;
  }

  .app .controls #take-photo i{
    font-size: 32px;
  }

  .app canvas{
    display: none;
  }

  .app video#camera-stream.visible,
  .app img#snap.visible,
  .app #error-message.visible
  {
    display: block;
  }

  .app .controls.visible{
    display: block;
  }

  @media(max-width: 1000px){

    .app #start-camera.visible{
      display: block;
    }

    .app .controls a i{
      font-size: 16px;
    }

    .app .controls #take-photo i{
      font-size: 24px;
    }
  }

  @media(max-width: 600px){
    .app #error-message{
      padding: 80px 50px;
      font-size: 18px;
    }

    .app .controls a i{
      font-size: 12px;
    }

    .app .controls #take-photo i{
      font-size: 18px;
    }
  }
</style>
